//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from m1.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="m1Parser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface Im1Listener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="m1Parser.translation_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTranslation_unit([NotNull] m1Parser.Translation_unitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="m1Parser.translation_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTranslation_unit([NotNull] m1Parser.Translation_unitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="m1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] m1Parser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="m1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] m1Parser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="m1Parser.addition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddition([NotNull] m1Parser.AdditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="m1Parser.addition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddition([NotNull] m1Parser.AdditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="m1Parser.subtraction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubtraction([NotNull] m1Parser.SubtractionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="m1Parser.subtraction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubtraction([NotNull] m1Parser.SubtractionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="m1Parser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] m1Parser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="m1Parser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] m1Parser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="m1Parser.product"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProduct([NotNull] m1Parser.ProductContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="m1Parser.product"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProduct([NotNull] m1Parser.ProductContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="m1Parser.quotient"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuotient([NotNull] m1Parser.QuotientContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="m1Parser.quotient"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuotient([NotNull] m1Parser.QuotientContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="m1Parser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] m1Parser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="m1Parser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] m1Parser.FactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="m1Parser.postfix_unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfix_unary_expression([NotNull] m1Parser.Postfix_unary_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="m1Parser.postfix_unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfix_unary_expression([NotNull] m1Parser.Postfix_unary_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="m1Parser.exponentiation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExponentiation([NotNull] m1Parser.ExponentiationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="m1Parser.exponentiation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExponentiation([NotNull] m1Parser.ExponentiationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="m1Parser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] m1Parser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="m1Parser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] m1Parser.AtomContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="m1Parser.parenthesized"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesized([NotNull] m1Parser.ParenthesizedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="m1Parser.parenthesized"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesized([NotNull] m1Parser.ParenthesizedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="m1Parser.prefix_unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrefix_unary_expression([NotNull] m1Parser.Prefix_unary_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="m1Parser.prefix_unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrefix_unary_expression([NotNull] m1Parser.Prefix_unary_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="m1Parser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] m1Parser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="m1Parser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] m1Parser.FunctionContext context);
}
